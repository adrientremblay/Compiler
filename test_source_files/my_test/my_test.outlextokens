[inlinecmt, // 9.1 inline comments, 1:1] 
[inlinecmt, // I am a comment :), 2:1] 
[inlinecmt, // 9.2 block comment, 3:1] 
[blockcmt, /* this\nis a\nblock comment\n22222223.9\n*, 4:1] 
[inlinecmt, // 9.3 nested block comment, 9:1] 
[blockcmt, /* we\n/* are\n/* nested\n*/ comments\n*/ :)\n*, 10:1] 
[inlinecmt, // 9.5 integer literals, 16:1] 
[intnum, 0, 17:1] [intnum, 10, 17:3] [intnum, 12131258, 17:6] 
[inlinecmt, // 9.6 integer - leading zeros not accepted, 18:1] 
[intnum, 0, 19:1] [intnum, 123, 19:2] 
[inlinecmt, // 9.7 float literals, 20:1] 
[floatnum, 0.0, 21:1] [floatnum, 10.0, 21:5] [floatnum, 123.0, 21:10] [floatnum, 1.23, 21:16] [floatnum, 1.03, 21:21] [floatnum, 1.23e4, 21:26] [floatnum, 1.23e+4, 21:33] [floatnum, 1.23e-4, 21:41] 
[inlinecmt, // 9.8 floats leading zeros not accepted, 22:1] 
[intnum, 0, 23:1] [floatnum, 1.23, 23:2] 
[inlinecmt, // 9.9 floats - trailing zeros not accepted, 24:1] 
[floatnum, 1.23, 25:1] [intnum, 0, 25:6] 
[inlinecmt, // 9.10 floats - leading zeros in exponent not accepted, 26:1] 
[floatnum, 1.23e0, 27:1] [intnum, 4, 27:7] 
[inlinecmt, // 9.11 identifiers, 28:1] 
[id, iAmAnIdentifier, 29:1] 
[inlinecmt, // 9.12 identifiers - with underscore after first letter, 30:1] 
[id, i_am_an_identifier, 31:1] 
[inlinecmt, // 9.13 identifiers - with digits after first letter, 32:1] 
[id, iAmAnIdentifier123, 33:1] 
[inlinecmt, // 9.14 invalid characters rejected as lexical errors, 34:1] 
[invalidchar, #, 35:1] [invalidchar, @, 35:3] [invalidchar, !, 35:5] 
[inlinecmt, // 9.15 space characters not always necessary between tokens, 36:1] 
[mult, *, 37:1] [plus, +, 37:2] [minus, -, 37:3] [float, float, 37:4] [colon, :, 37:9] [self, self, 37:10] [closecubr, }, 37:14] [intnum, 123, 37:15] 
[inlinecmt, // 9.16 specific tokens for each operator, punctuation and reserved word, 38:1] 
[eq, ==, 39:1] [plus, +, 39:4] [or, or, 39:6] [openpar, (, 39:9] [semi, ;, 39:11] [integer, integer, 39:13] [while, while, 39:21] [localvar, localvar, 39:27] 
[noteq, <>, 40:1] [minus, -, 40:4] [and, and, 40:6] [closepar, ), 40:10] [comma, ,, 40:12] [float, float, 40:14] [if, if, 40:20] [constructor, constructor, 40:23] 
[lt, <, 41:1] [mult, *, 41:3] [not, not, 41:5] [opencubr, {, 41:9] [dot, ., 41:11] [void, void, 41:13] [then, then, 41:18] [attribute, attribute, 41:23] 
[gt, >, 42:1] [div, /, 42:3] [closecubr, }, 42:5] [colon, :, 42:7] [class, class, 42:9] [else, else, 42:15] [function, function, 42:20] 
[leq, <=, 43:1] [assign, =, 43:4] [opencubr, {, 43:6] [returntype, =>, 43:8] [self, self, 43:11] [read, read, 43:16] [public, public, 43:21] 
[geq, >=, 44:1] [closesqbr, ], 44:4] [scopeop, ::, 44:6] [isa, isa, 44:9] [write, write, 44:13] [private, private, 44:19] 
[return, return, 45:1] 
[inlinecmt, // 9.4 unterminated block comment error, 46:1] 
[error, /*\n\nasdasdasdsad never end, 47:1] 