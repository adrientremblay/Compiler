[inlinecmt, // 9.1 inline comments, 1:0] 
[inlinecmt, // I am a comment :), 2:0] 
[inlinecmt, // 9.2 block comment, 3:0] 
[blockcmt, /* this\nis a\nblock comment\n22222223.9\n*, 4:0] 
[inlinecmt, // 9.3 nested block comment, 9:0] 
[blockcmt, /* we\n/* are\n/* nested\n*/ comments\n*/ :)\n*, 10:0] 
[inlinecmt, // 9.5 integer literals, 16:0] 
[intnum, 0, 17:0] [intnum, 10, 17:2] [intnum, 12131258, 17:5] 
[inlinecmt, // 9.6 integer - leading zeros not accepted, 18:0] 
[intnum, 0, 19:0] [intnum, 123, 19:1] 
[inlinecmt, // 9.7 float literals, 20:0] 
[floatnum, 0.0, 21:0] [floatnum, 10.0, 21:4] [floatnum, 123.0, 21:9] [floatnum, 1.23, 21:15] [floatnum, 1.03, 21:20] [floatnum, 1.23e4, 21:25] [floatnum, 1.23e+4, 21:32] [floatnum, 1.23e-4, 21:40] 
[inlinecmt, // 9.8 floats leading zeros not accepted, 22:0] 
[intnum, 0, 23:0] [floatnum, 1.23, 23:1] 
[inlinecmt, // 9.9 floats - trailing zeros not accepted, 24:0] 
[floatnum, 1.23, 25:0] [intnum, 0, 25:5] 
[inlinecmt, // 9.10 floats - leading zeros in exponent not accepted, 26:0] 
[floatnum, 1.23e0, 27:0] [intnum, 4, 27:6] 
[inlinecmt, // 9.11 identifiers, 28:0] 
[id, iAmAnIdentifier, 29:0] 
[inlinecmt, // 9.12 identifiers - with underscore after first letter, 30:0] 
[id, i_am_an_identifier, 31:0] 
[inlinecmt, // 9.13 identifiers - with digits after first letter, 32:0] 
[id, iAmAnIdentifier123, 33:0] 
[inlinecmt, // 9.14 invalid characters rejected as lexical errors, 34:0] 
[invalidchar, #, 35:0] [invalidchar, @, 35:2] [invalidchar, !, 35:4] 
[inlinecmt, // 9.15 space characters not always necessary between tokens, 36:0] 
[mult, *, 37:0] [plus, +, 37:1] [minus, -, 37:2] [float, float, 37:3] [colon, :, 37:8] [self, self, 37:9] [closecubr, }, 37:13] [intnum, 123, 37:14] 
[inlinecmt, // 9.16 specific tokens for each operator, punctuation and reserved word, 38:0] 
[eq, ==, 39:0] [plus, +, 39:3] [or, or, 39:5] [openpar, (, 39:8] [semi, ;, 39:10] [integer, integer, 39:12] [while, while, 39:20] [localvar, localvar, 39:26] 
[noteq, <>, 40:0] [minus, -, 40:3] [and, and, 40:5] [closepar, ), 40:9] [comma, ,, 40:11] [float, float, 40:13] [if, if, 40:19] [constructor, constructor, 40:22] 
[lt, <, 41:0] [mult, *, 41:2] [not, not, 41:4] [opencubr, {, 41:8] [dot, ., 41:10] [void, void, 41:12] [then, then, 41:17] [attribute, attribute, 41:22] 
[gt, >, 42:0] [div, /, 42:2] [closecubr, }, 42:4] [colon, :, 42:6] [class, class, 42:8] [else, else, 42:14] [function, function, 42:19] 
[leq, <=, 43:0] [assign, =, 43:3] [opencubr, {, 43:5] [returntype, =>, 43:7] [self, self, 43:10] [read, read, 43:15] [public, public, 43:20] 
[geq, >=, 44:0] [closesqbr, ], 44:3] [scopeop, ::, 44:5] [isa, isa, 44:8] [write, write, 44:12] [private, private, 44:18] 
[return, return, 45:0] 
[inlinecmt, // 9.4 unterminated block comment error, 46:0] 
[error, /*\n\nasdasdasdsad never end, 47:0] 