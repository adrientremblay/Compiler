[eq, ==, 1:0] [plus, +, 1:2] [or, or, 1:3] [openpar, (, 1:5] [semi, ;, 1:6] [integer, integer, 1:7] [while, while, 1:14] [localvar, localvar, 1:19] 
[noteq, <>, 2:0] [minus, -, 2:2] [and, and, 2:3] [closepar, ), 2:6] [comma, ,, 2:7] [float, float, 2:8] [if, if, 2:13] [constructor, constructor, 2:16] 
[lt, <, 3:0] [mult, *, 3:1] [not, not, 3:2] [opencubr, {, 3:5] [dot, ., 3:6] [void, void, 3:7] [then, then, 3:11] [attribute, attribute, 3:15] 
[gt, >, 4:0] [div, /, 4:1] [closecubr, }, 4:3] [colon, :, 4:4] [class, class, 4:5] [else, else, 4:10] [function, function, 4:14] 
[leq, <=, 5:0] [assign, =, 5:2] [opensqbr, [, 5:4] [returntype, =>, 5:5] [self, self, 5:7] [read, read, 5:11] [public, public, 5:15] 
[geq, >=, 6:0] [closesqbr, ], 6:4] [scopeop, ::, 6:5] [isa, isa, 6:7] [write, write, 6:10] [private, private, 6:15] 
[return, return, 7:6] 
[intnum, 0, 9:0] 
[intnum, 1, 10:0] 
[intnum, 10, 11:0] 
[intnum, 12, 12:0] 
[intnum, 123, 13:0] 
[intnum, 12345, 14:0] 
[floatnum, 1.23, 16:0] 
[floatnum, 12.34, 17:0] 
[floatnum, 120.34e10, 18:0] 
[floatnum, 12345.6789e-123, 19:0] 
[id, abc, 21:0] 
[id, abc1, 22:0] 
[id, a1bc, 23:0] 
[id, abc_1abc, 24:0] 
[id, abc1_abc, 25:0] 
[inlinecmt, // this is an inline comment, 26:0] 
[blockcmt, /* this is a single line block comment *, 29:0] 
[blockcmt, /* this is a \r\nmultiple line\r\nblock comment \r\n*, 31:0] 
[blockcmt, /* this is an imbricated \r\n/* block comment\r\n*/\r\n*, 36:0] 