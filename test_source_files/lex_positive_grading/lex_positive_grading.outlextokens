[eq, ==, 1:1] [plus, +, 1:4] [or, or, 1:6] [openpar, (, 1:9] [semi, ;, 1:11] [integer, integer, 1:13] [while, while, 1:21] [localvar, localvar, 1:27] 
[noteq, <>, 2:1] [minus, -, 2:4] [and, and, 2:6] [closepar, ), 2:10] [comma, ,, 2:12] [float, float, 2:14] [if, if, 2:20] [constructor, constructor, 2:24] 
[lt, <, 3:1] [mult, *, 3:3] [not, not, 3:5] [opencubr, {, 3:9] [dot, ., 3:11] [void, void, 3:13] [then, then, 3:18] [attribute, attribute, 3:23] 
[gt, >, 4:1] [div, /, 4:3] [closecubr, }, 4:6] [colon, :, 4:8] [class, class, 4:10] [else, else, 4:16] [function, function, 4:21] 
[leq, <=, 5:1] [assign, =, 5:4] [opensqbr, [, 5:7] [returntype, =>, 5:9] [self, self, 5:12] [read, read, 5:17] [public, public, 5:22] 
[geq, >=, 6:1] [closesqbr, ], 6:6] [scopeop, ::, 6:8] [isa, isa, 6:11] [write, write, 6:15] [private, private, 6:21] 
[return, return, 7:7] 
[intnum, 0, 9:1] 
[intnum, 1, 10:1] 
[intnum, 10, 11:1] 
[intnum, 12, 12:1] 
[intnum, 123, 13:1] 
[intnum, 12345, 14:1] 
[floatnum, 1.23, 16:1] 
[floatnum, 12.34, 17:1] 
[floatnum, 120.34e10, 18:1] 
[floatnum, 12345.6789e-123, 19:1] 
[id, abc, 21:1] 
[id, abc1, 22:1] 
[id, a1bc, 23:1] 
[id, abc_1abc, 24:1] 
[id, abc1_abc, 25:1] 
[inlinecmt, // this is an inline comment, 27:1] 
[blockcmt, /* this is a single line block comment *, 29:1] 
[blockcmt, /* this is a \r\nmultiple line\r\nblock comment \r\n*, 31:1] 
[blockcmt, /* this is an imbricated \r\n/* block comment\r\n*/\r\n*, 36:1] 